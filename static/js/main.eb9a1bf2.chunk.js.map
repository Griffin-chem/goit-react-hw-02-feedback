{"version":3,"sources":["components/Feedback/styledFeedback.js","components/Feedback/Feedback.js","components/Statistic/styledStatistic.js","components/Statistic/Statistic.js","components/Notification/styledNotification.js","components/Notification/Notification.js","components/Section/styledSection.js","components/Section/Section.js","App.js","index.js"],"names":["Button","styled","button","Feedback","options","onFeedbackLeave","map","option","name","key","onClick","Stat","p","Statistic","total","positivePercentage","Object","entries","Message","Notification","message","Title","Section","title","children","App","state","good","neutral","bad","countTotalFeedback","values","reduce","acc","elem","countPositiveFeedbackPercentage","Math","round","handleClick","e","preventDefault","newState","target","setState","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6eAEA,IAAMA,EAASC,IAAOC,OAAV,KCYGC,EATE,SAACC,EAASC,GACzB,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OAAK,kBAACP,EAAD,CAAQQ,KAAMD,EAAQE,IAAKF,EAAQG,QAASL,GAAkBE,O,8JCJ9F,IAAMI,EAAOV,IAAOW,EAAV,KCiBKC,EAdG,SAACT,EAASU,EAAOC,GACjC,OAAQ,oCACPC,OAAOC,QAAQb,GAASE,KAAI,SAAAC,GAAM,OAAK,kBAACI,EAAD,CAAMF,IAAKF,EAAO,IAAKA,EAAO,GAA9B,KAAoCA,EAAO,OACjF,kBAACI,EAAD,eAAcG,GACd,kBAACH,EAAD,2BAA0BI,EAA1B,O,kHCPJ,IAAMG,EAAUjB,IAAOW,EAAV,KCQEO,EANM,SAACC,GACpB,OACA,kBAACF,EAAD,KAAUE,I,uHCJZ,IAAMC,EAAQpB,IAAOW,EAAV,KCWIU,EATC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACvB,OACE,iCACE,kBAACH,EAAD,KAAQE,GACPC,ICyCQC,E,4MAtCbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,mBAAqB,WACnB,OAAOd,OAAOe,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,I,EAGrEC,gCAAkC,WACjC,OAA4B,IAApB,EAAKT,MAAMC,KAAc,EAAIS,KAAKC,MAAM,EAAKX,MAAMC,KAAO,EAAKG,qBAAuB,M,EAG/FQ,YAAc,SAACC,GACbA,EAAEC,iBACF,IAAMC,EAAQ,eAAKF,EAAEG,OAAOlC,KAAO,EAAKkB,MAAMa,EAAEG,OAAOlC,MAAQ,GAC/D,EAAKmC,SAASF,I,uDAId,OACE,6BACE,kBAAC,EAAD,CAASlB,MAAM,yBAAyBC,SAAUrB,EAASa,OAAO4B,KAAKC,KAAKnB,OAAQmB,KAAKP,eACzF,kBAAC,EAAD,CAASf,MAAM,YAAYC,SACM,IAA9BqB,KAAKf,qBACJX,EAAa,6BACbN,EAAUgC,KAAKnB,MAAOmB,KAAKf,qBAAsBe,KAAKV,0C,GA7BhDW,aCJlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.eb9a1bf2.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  text-transform: capitalize;\r\n  background-color: #a7a7a7;\r\n  border: 2px solid #000000;\r\n  border-radius: 3px;\r\n  margin: 0px 3px;  \r\n`;\r\n\r\nexport {Button};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Button} from './styledFeedback';\r\n\r\nconst Feedback = (options, onFeedbackLeave) => {\r\n  return options.map(option => (<Button name={option} key={option} onClick={onFeedbackLeave}>{option}</Button>))\r\n}\r\n\r\nFeedback.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onFeedbackLeave: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Feedback;","import styled from 'styled-components';\r\n\r\nconst Stat = styled.p`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  margin: 0;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport {Stat};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Stat} from './styledStatistic';\r\n\r\nconst Statistic = (options, total, positivePercentage) => {\r\n  return (<>\r\n  {Object.entries(options).map(option => (<Stat key={option[0]}>{option[0]}: {option[1]}</Stat>))}\r\n    <Stat>Total: {total}</Stat>\r\n    <Stat>Positive Feedback: {positivePercentage}%</Stat>\r\n  </>)\r\n};\r\n\r\nStatistic.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Statistic;","import styled from 'styled-components';\r\n\r\nconst Message = styled.p`\r\n  font-size: 14px;\r\n  font-style: italic;\r\n`;\r\n\r\nexport {Message}","import React from 'react';\r\n\r\nimport {Message} from './styledNotification';\r\n\r\nconst Notification = (message) => {\r\n  return (\r\n  <Message>{message}</Message>\r\n  )\r\n}\r\n\r\nexport default Notification;","import styled from 'styled-components';\r\n\r\nconst Title = styled.p`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport {Title};","import React from 'react';\r\n\r\nimport {Title} from './styledSection';\r\n\r\nconst Section = ({title, children}) => {\r\n  return (\r\n    <section>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\n\nimport Feedback from './components/Feedback/Feedback';\nimport Statistic from './components/Statistic/Statistic';\nimport Notification from './components/Notification/Notification';\n\nimport './App.css';\nimport Section from './components/Section/Section';\n\nclass App extends Component {\n  \n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, elem) => acc + elem, 0)\n  };\n\n  countPositiveFeedbackPercentage = () => {\n   return (this.state.good === 0) ? 0 : Math.round(this.state.good / this.countTotalFeedback() * 100)\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const newState = {[e.target.name]: this.state[e.target.name] + 1};\n    this.setState(newState);\n  };  \n\n  render () { \n    return (\n      <div>\n        <Section title=\"Please, leave feedback\" children={Feedback(Object.keys(this.state), this.handleClick)}></Section>\n        <Section title=\"Statistic\" children={\n          (this.countTotalFeedback() === 0)\n          ? Notification(\"No feedback provided yet!\")\n          : Statistic(this.state, this.countTotalFeedback(), this.countPositiveFeedbackPercentage())}></Section>\n        {/* <section>\n          <p>Statistic</p>\n          <Statistic options={this.state} total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage()}>\n          </Statistic>\n        </section> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}