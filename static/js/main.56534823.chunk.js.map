{"version":3,"sources":["components/Feedback/styledFeedback.js","components/Feedback/Feedback.js","components/Statistic/styledStatistic.js","components/Statistic/Statistic.js","components/Notification/styledNotification.js","components/Notification/Notification.js","components/Section/styledSection.js","components/Section/Section.js","App.js","index.js"],"names":["Button","styled","button","Feedback","options","onFeedbackLeave","map","option","name","key","onClick","Stat","p","Statistic","total","positivePercentage","Object","entries","Message","Notification","message","Title","Section","title","children","App","state","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","handleClick","e","preventDefault","target","newState","setState","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6eAEA,IAAMA,EAASC,IAAOC,OAAV,KCgBGC,EAbE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC3B,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,kBAACP,EAAD,CAAQQ,KAAMD,EAAQE,IAAKF,EAAQG,QAASL,GACzCE,O,8JCNP,IAAMI,EAAOV,IAAOW,EAAV,KCuBKC,EApBG,SAACT,EAASU,EAAOC,GACjC,OACE,oCACGC,OAAOC,QAAQb,GAASE,KAAI,SAACC,GAAD,OAC3B,kBAACI,EAAD,CAAMF,IAAKF,EAAO,IACfA,EAAO,GADV,KACgBA,EAAO,OAGzB,kBAACI,EAAD,eAAcG,GACd,kBAACH,EAAD,2BAA0BI,EAA1B,O,kHCZN,IAAMG,EAAUjB,IAAOW,EAAV,KCQEO,EANM,SAACC,GACpB,OACA,kBAACF,EAAD,KAAUE,I,iHCJZ,IAAMC,EAAQpB,IAAOW,EAAV,KCWIU,EATC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACvB,OACE,iCACE,kBAACH,EAAD,KAAQE,GACPC,ICiDQC,G,kNA/CbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,mBAAqB,WAAO,IAAD,EACM,EAAKJ,MACpC,OAFyB,EACjBC,KADiB,EACXC,QADW,EACFC,K,EAIzBE,gCAAkC,WAChC,OAAQ,EAAKL,MAAMC,KAEfK,KAAKC,MAAO,EAAKP,MAAMC,KAAO,EAAKG,qBAAwB,KAD3D,G,EAINI,YAAc,SAACC,GACbA,EAAEC,iBADiB,IAEX5B,EAAS2B,EAAEE,OAAX7B,KACF8B,EAAQ,eAAM9B,EAAO,EAAKkB,MAAMlB,GAAQ,GAC9C,EAAK+B,SAASD,I,uDAId,OACE,6BACE,kBAAC,EAAD,CAASf,MAAM,0BACb,kBAAC,EAAD,CACEnB,QAASY,OAAOwB,KAAKC,KAAKf,OAC1BrB,gBAAiBoC,KAAKP,eAG1B,kBAAC,EAAD,CAASX,MAAM,aACXkB,KAAKX,qBAEHjB,EACE4B,KAAKf,MACLe,KAAKX,qBACLW,KAAKV,mCAJPZ,EAAa,mC,GApCTuB,cCJlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.56534823.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  text-transform: capitalize;\r\n  background-color: #a7a7a7;\r\n  border: 2px solid #000000;\r\n  border-radius: 3px;\r\n  margin: 0px 3px;  \r\n`;\r\n\r\nexport {Button};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Button } from \"./styledFeedback\";\r\n\r\nconst Feedback = ({ options, onFeedbackLeave }) => {\r\n  return options.map((option) => (\r\n    <Button name={option} key={option} onClick={onFeedbackLeave}>\r\n      {option}\r\n    </Button>\r\n  ));\r\n};\r\n\r\nFeedback.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onFeedbackLeave: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Feedback;\r\n","import styled from 'styled-components';\r\n\r\nconst Stat = styled.p`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  margin: 0;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport {Stat};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Stat } from \"./styledStatistic\";\r\n\r\nconst Statistic = (options, total, positivePercentage) => {\r\n  return (\r\n    <>\r\n      {Object.entries(options).map((option) => (\r\n        <Stat key={option[0]}>\r\n          {option[0]}: {option[1]}\r\n        </Stat>\r\n      ))}\r\n      <Stat>Total: {total}</Stat>\r\n      <Stat>Positive Feedback: {positivePercentage}%</Stat>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistic.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","import styled from 'styled-components';\r\n\r\nconst Message = styled.p`\r\n  font-size: 14px;\r\n  font-style: italic;\r\n`;\r\n\r\nexport {Message}","import React from 'react';\r\n\r\nimport {Message} from './styledNotification';\r\n\r\nconst Notification = (message) => {\r\n  return (\r\n  <Message>{message}</Message>\r\n  )\r\n}\r\n\r\nexport default Notification;","import styled from 'styled-components';\r\n\r\nconst Title = styled.p`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport {Title};","import React from 'react';\r\n\r\nimport {Title} from './styledSection';\r\n\r\nconst Section = ({title, children}) => {\r\n  return (\r\n    <section>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Section;","import React, { Component } from \"react\";\n\nimport Feedback from \"./components/Feedback/Feedback\";\nimport Statistic from \"./components/Statistic/Statistic\";\nimport Notification from \"./components/Notification/Notification\";\nimport Section from \"./components/Section/Section\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return !this.state.good\n      ? 0\n      : Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const { name } = e.target;\n    const newState = { [name]: this.state[name] + 1 };\n    this.setState(newState);\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please, leave feedback\">\n          <Feedback\n            options={Object.keys(this.state)}\n            onFeedbackLeave={this.handleClick}\n          />\n        </Section>\n        <Section title=\"Statistic\">\n          {!this.countTotalFeedback()\n            ? Notification(\"No feedback provided yet!\")\n            : Statistic(\n                this.state,\n                this.countTotalFeedback(),\n                this.countPositiveFeedbackPercentage()\n              )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}